@model NCCFOhaukwu.Web.Models.Events
@{
    ViewBag.Title = "Events";
    Layout = "~/Views/Shared/_LayoutInner.cshtml";
}

<h2>Events</h2>

<div id="admincalendar" class="container-fluid"></div>

<div class="modal fade" id="popupEventForm">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">
                    <span aria-hidden="true">&times;</span><span class="sr-only">Close</span>
                </button>
                <h3>Add new event</h3>
            </div>
            <div class="modal-body">
                <form id="EventForm" class="container-fluid form-horizontal">
                    <div class="form-group">
                        @Html.LabelFor(model => model.title, new { @class = "control-label" })
                        <div class="">
                            @Html.EditorFor(model => model.title, new { htmlAttributes = new { @class = "input-sm", data_validation = "required", data_validation_error_msg = "The first name field is required" } })
                            @Html.ValidationMessageFor(model => model.title, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label">Scheduled date</label><br />
                        <div class="col-md-3 zero-padding">
                            @Html.LabelFor(model => model.StartDay, new { @class = "control-label" })
                            @Html.EditorFor(model => model.StartDay, new { htmlAttributes = new { @class = "input-sm", data_validation = "number", data_validation_allowing = "range[1;31]", data_validation_error_msg = "The day field must be from 1 to 31" } })
                            @Html.ValidationMessageFor(model => model.StartDay, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-4 col-md-offset-1 zero-padding">
                            @Html.LabelFor(model => model.StartMonth, new { @class = "control-label" })
                            @Html.DropDownListFor(m => m.StartMonth, Model.MonthList, new { @class = "input-sm", data_validation = "required", data_validation_error_msg = "The month field is required" })
                            @Html.ValidationMessageFor(m => m.StartMonth, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-3 col-md-offset-1 zero-padding">
                            @Html.LabelFor(model => model.StartYear, new { @class = "control-label" })
                            @Html.EditorFor(model => model.StartYear, new { htmlAttributes = new { @class = "input-sm", data_validation = "number", data_validation_error_msg = "The year field is required" } })
                            @Html.ValidationMessageFor(model => model.StartYear, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-5 zero-padding">
                            <label class="control-label">Start time</label><br />
                            <div class="col-md-6 zero-padding">
                                @Html.EditorFor(model => model.StartTime, new { htmlAttributes = new { @class = "input-sm", data_validation = "number", data_validation_allowing = "range[1;12]", data_validation_error_msg = "The start time field must be from 1 to 12" } })
                                @Html.ValidationMessageFor(model => model.StartTime, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-6 zero-padding">
                                @Html.DropDownListFor(m => m.StartTimeMeridian, Model.Meridian, new {@class = "input-sm", data_validation = "required", data_validation_error_msg = "The meridan field is required"})
                                @Html.ValidationMessageFor(m => m.StartTimeMeridian, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-6 col-md-offset-1 zero-padding">
                            <label class="control-label">End time</label><br />
                            <div class="col-md-6 zero-padding">
                                @Html.EditorFor(model => model.EndTime, new { htmlAttributes = new { @class = "input-sm", data_validation = "number", data_validation_allowing = "range[1;12]", data_validation_error_msg = "The end time field must be from 1 to 12" } })
                                @Html.ValidationMessageFor(model => model.EndTime, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-6 zero-padding">
                                @Html.DropDownListFor(m => m.EndTimeMeridian, Model.Meridian, new { @class = "input-sm", data_validation = "required", data_validation_error_msg = "The meridan field is required" })
                                @Html.ValidationMessageFor(m => m.EndTimeMeridian, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Venue, new { @class = "control-label" })
                        <div class="">
                            @Html.EditorFor(model => model.Venue, new { htmlAttributes = new { @class = "input-sm", data_validation = "required", data_validation_error_msg = "The first name field is required" } })
                            @Html.ValidationMessageFor(model => model.Venue, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.VenueAddress, new { @class = "control-label" })
                        <div class="">
                            @Html.EditorFor(model => model.VenueAddress, new { htmlAttributes = new { @class = "input-sm", data_validation = "required", data_validation_error_msg = "The first name field is required" } })
                            @Html.ValidationMessageFor(model => model.VenueAddress, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, new { @class = "control-label" })
                        <div class="">
                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "input-sm", data_validation = "required", data_validation_error_msg = "The first name field is required" } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.url, new { @class = "control-label" })
                        <div class="">
                            @Html.EditorFor(model => model.url, new { htmlAttributes = new { @class = "input-sm", data_validation = "required", data_validation_error_msg = "The first name field is required" } })
                            @Html.ValidationMessageFor(model => model.url, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" id="btnPopupCancel" data-dismiss="modal" class="btn">Cancel</button>
                <button type="button" id="btnPopupSave" data-dismiss="modal" class="btn btn-mod-sm">Save event</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->