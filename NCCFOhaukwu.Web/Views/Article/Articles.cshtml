@using System.Text.RegularExpressions
@using PagedList.Mvc
@model PagedList.IPagedList<DAL.Articles>

@{
    ViewBag.Title = "Articles";
    Layout = "~/Views/Shared/_ArticleLayout.cshtml";
}

<span class="container-fluid">Articles</span>
@foreach (var article in Model)
{
    <div class="general-news">
        <span>@article.Title</span>
        <div class="row">
            <div class="col-xs-8 col-md-5">
                <a href="@Url.Action("AuthorArticles", "Author", new { username = article.Username.Replace(" ", "-").ToLower() })"><i class="fa fa-user"></i>&nbsp;&nbsp;@article.Author.FullName</a>
            </div>
            <div class="col-xs-4 col-md-7">
                <a href="@Url.Action("Articles", "Article")"><i class="fa fa-folder-open-o"></i>&nbsp;&nbsp;Articles</a>
            </div>
        </div><br />
        <p>
            posted on <strong>@article.DateModified.ToString("D")</strong>
        </p>
        <hr/>
        @{
            var articles = Regex.Replace(article.Article, "<.*?>", string.Empty);
            articles = (articles.Length >= 300) ? articles.Substring(0, 300) : articles;
        }

        <span class="" style="">@articles ...</span>

        <a style="" class="btn btn-mod" href="@Url.Action("Article", "Article", new { id = article.Id, title = Regex.Replace(article.Title, "[^a-zA-Z0-9 ]", "").Replace(" ", "-").ToLower() })">Continue Reading</a>

    </div>
}

@Html.PagedListPager(Model, page => Url.Action("Articles", "Article", new {page}),
    new PagedListRenderOptions {Display = PagedListDisplayMode.IfNeeded, MaximumPageNumbersToDisplay = 10})